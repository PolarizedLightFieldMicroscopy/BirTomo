{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww17760\viewh13060\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 9 April 2025:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b0 \cf2 optical_config_spicule\
    "volume_shape"      : [43, 123, 123],\
    "n_micro_lenses"    : 111,\
    "pixels_per_ml"     : 16,\
    "n_voxels_per_ml"   : 1,\
    "M_obj"             : 20,\
    "na_obj"            : 0.4,\
    "n_medium"          : 1.35,\
    "wavelength"        : 0.550,\
    "camera_pix_pitch"  : 6.5,\
    "aperture_radius_px": 7.5,\
    "cube_voxels"       : true,\
In Mathematica, before saving a TIFF file of the slow axis orientations or azimuth values for use with PolScope graphics functions in ImageJ, the azimuth values need to be subtracted from Pi or 3.1416 to conform to the conventions in OpenPolScope graphics. Those transformed values generate the correct line orientations when using the "Display  azim lines" macro in ImageJ.\
\
Spicule1248Feb17-h5_April9BirTomoLFRet.tif; Spicule1248Feb17-h5_April9BirTomoLFAzim.tif\
\
In ImageJ, before converting to an 8-bit PolStack, the pixel values of the retardance image are multiplied by a factor that is equal to 255 divided by the retardance ceiling value, e.g 1.2 radian.  The pixel values in the azimuth image, given in radian, are multiplied by 180 divided by Pi, or 3,1416, to convert the azimuth angles to degree.     -> 255/1.2=212.5;  180/3.1416=57.3;\
}